<style>
  :root {
    --tilt: 6deg; /* how far it leans */
    --speed: 0.9s; /* how fast it swings */
    --cycle-duration: 30s; /* total cycle time for all 3 instances */
  }

  .card-container {
    width: 100vw;
    height: 350px;
    position: relative;
  }

  h1,
  h3 {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
      Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  }

  .card-content {
    width: 95vw;
    height: 350px;
    background: rgb(247, 21, 21);
    margin: 40px auto;
    display: grid;
    grid-template-columns: 1fr 1fr;
    transition: background-color 1s ease-in-out;
  }

  /* Background colors for each slide */
  .card-content.slide-1 {
    background: rgb(29, 78, 216); /* iPhone blue */
  }

  .card-content.slide-2 {
    background: rgb(34, 197, 94); /* Samsung green */
  }

  .card-content.slide-3 {
    background: rgb(239, 68, 68); /* Google Pixel red */
  }

  /* State indicators */
  .state-indicators {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    z-index: 10;
  }

  .state-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.4);
    transition: all 0.3s ease-in-out;
    border: 2px solid transparent;
  }

  .state-dot.active {
    background: white;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    transform: scale(1.2);
  }

  /* Color-coded dots based on current slide */
  .card-content.slide-1 ~ .state-indicators .state-dot.active {
    background: rgb(29, 78, 216);
    box-shadow: 0 0 15px rgba(29, 78, 216, 0.6);
  }

  .card-content.slide-2 ~ .state-indicators .state-dot.active {
    background: rgb(34, 197, 94);
    box-shadow: 0 0 15px rgba(34, 197, 94, 0.6);
  }

  .card-content.slide-3 ~ .state-indicators .state-dot.active {
    background: rgb(239, 68, 68);
    box-shadow: 0 0 15px rgba(239, 68, 68, 0.6);
  }

  .big {
    width: 100px;
    height: 20px;
    background: rgb(122, 60, 1);
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 50px;
    border-radius: 5px;
  }
  .big h1 {
    font-size: 15px;
    color: white;
  }

  button {
    width: 200px;
    height: 50px;
    cursor: pointer;
    border-radius: 10px;
    background: rgb(118, 118, 247);
    color: white;
    font-size: 20px;
    margin-top: 10px;
  }

  .ai {
    color: white;
    font-size: 30px;
    font-weight: 900;
    line-height: 0.5;
  }

  h3 {
    color: white;
    font-size: 14px;
    line-height: 0.9;
  }

  .from {
    display: flex;
    gap: 10px;
    /* background: green; */
    height: 50px;
  }

  .left {
    overflow: hidden;
    position: relative;
  }

  .hero-content {
    position: absolute;
    top: 0;
    left: 20px;
    width: calc(100% - 20px);
    opacity: 0;
    transform: translateY(-350px);
    filter: blur(10px);
  }

  .hero-content.active {
    animation: heroIn 1s ease-in-out forwards;
  }

  .hero-content.exit {
    animation: heroOut 1s ease-in-out forwards;
  }

  .from h3 {
    /* margin-top: 40px; */
  }

  /* Base img-container with smooth transitions */
  .img-container {
    width: 350px;
    height: 280px;
    margin: auto;
    margin-top: 20px;
    overflow: hidden;
    perspective: 1000px;
    position: relative;
    transition:
      width 1s ease-in-out,
      height 1s ease-in-out;
  }

  /* Different sizes for each slide */
  .card-content.slide-1 .img-container {
    width: 300px;
    height: 250px;
  }

  .card-content.slide-2 .img-container {
    width: 280px;
    height: 300px;
  }

  .card-content.slide-3 .img-container {
    width: 260px;
    height: 270px;
  }

  .img-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transform: translateY(500px) translateZ(-200px) rotateX(45deg);
  }

  .img-container img.active {
    animation: imageIn 1s ease-in-out forwards;
  }

  .img-container img.exit {
    animation: imageOut 1s ease-in-out forwards;
  }

  /* Special animation for middle image (img2) */
  .img-container #img2.active {
    animation: imageInMiddle 1s ease-in-out forwards;
  }

  .img-container #img2.exit {
    animation: imageOutMiddle 1s ease-in-out forwards;
  }

  .seesaw {
    display: inline-block;
    transform-origin: 50% 50%;
    animation: seesaw var(--speed) ease-in-out infinite;
    will-change: transform;
    margin-top: -4px;
  }

  @keyframes heroIn {
    0% {
      filter: blur(10px);
      transform: translateY(-350px);
      opacity: 0;
    }
    100% {
      filter: blur(0px);
      transform: translateY(0);
      opacity: 1;
    }
  }

  @keyframes heroOut {
    0% {
      filter: blur(0px);
      transform: translateY(0);
      opacity: 1;
    }
    100% {
      filter: blur(10px);
      transform: translateY(-350px);
      opacity: 0;
    }
  }

  @keyframes imageIn {
    0% {
      transform: translateY(500px) translateZ(-200px) rotateX(45deg);
      opacity: 0;
    }
    100% {
      transform: translateY(0) translateZ(0) rotateX(0deg);
      opacity: 1;
    }
  }

  @keyframes imageOut {
    0% {
      transform: translateY(0) translateZ(0) rotateX(0deg);
      opacity: 1;
    }
    100% {
      transform: translateY(500px) translateZ(-200px) rotateX(45deg);
      opacity: 0;
    }
  }

  @keyframes imageInMiddle {
    0% {
      transform: translateX(-500px) translateZ(-200px) rotateY(-45deg);
      opacity: 0;
    }
    100% {
      transform: translateX(0) translateZ(0) rotateY(0deg);
      opacity: 1;
    }
  }

  @keyframes imageOutMiddle {
    0% {
      transform: translateX(0) translateZ(0) rotateY(0deg);
      opacity: 1;
    }
    100% {
      transform: translateX(-500px) translateZ(-200px) rotateY(-45deg);
      opacity: 0;
    }
  }

  @keyframes seesaw {
    0% {
      transform: rotate(-var(--tilt));
    }
    50% {
      transform: rotate(var(--tilt));
    }
    100% {
      transform: rotate(-var(--tilt));
    }
  }

  @media screen and (min-width: 0px) and (max-width: 600px) {
    .card-content {
      grid-template-columns: 1fr;
      height: 900px;
    }
    .ai {
      text-align: center;
    }
    .from {
      align-items: center;
      /* background: red; */
      width: 250px;
      margin: 0 auto;
    }
    button {
      margin: 0 auto;
      text-align: center;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    h3 {
      text-align: center;
    }
    .from h3 {
      margin-top: -3px;
    }
    .card-container {
      height: 650px;
    }
    .ai {
      line-height: normal;
    }
    h3{
      line-height: normal;
    }
  }
</style>

<div class="card-container">
  <div class="card-content slide-1">
    <div class="left">
      <!-- Hero Content 1 -->
      <div class="hero-content active" id="hero1">
        <div class="big">
          <h1>BIG SALE</h1>
        </div>
        <h1 class="ai">Samsung Galaxy A06</h1>
        <h1 class="ai">Up To 25% Off</h1>
        <h3>AMAZING DISCOUNT AND DEALS</h3>
        <div class="from">
          <h3>DEPOSIT</h3>
          <h1 class="seesaw">Ksh 3,500</h1>
        </div>
        <button>SHOP NOW</button>
      </div>

      <!-- Hero Content 2 -->
      <div class="hero-content" id="hero2">
        <div class="big">
          <h1>HOT DEAL</h1>
        </div>
        <h1 class="ai">Tecno Spark 40</h1>
        <h1 class="ai">Up To 30% Off</h1>
        <h3>LIMITED TIME OFFER</h3>
        <div class="from">
          <h3>DEPOSIT</h3>
          <h1 class="seesaw">Ksh 2,900</h1>
        </div>
        <button>BUY NOW</button>
      </div>

      <!-- Hero Content 3 -->
      <div class="hero-content" id="hero3">
        <div class="big">
          <h1>FLASH SALE</h1>
        </div>
        <h1 class="ai">Mkopa X20</h1>
        <h1 class="ai">Up To 35% Off</h1>
        <h3>EXCLUSIVE DEALS TODAY</h3>
        <div class="from">
          <h3>DEPOSIT</h3>
          <h1 class="seesaw">Ksh 4,199</h1>
        </div>
        <button>ORDER NOW</button>
      </div>
    </div>

    <div class="right">
      <div class="img-container">
        <img
          src="/phones/samsung.png"
          alt="Samsung Galaxy"
          id="img1"
          class="active"
        />
        <img src="/phones/tecno.jpg" alt="Tecno Spark" id="img2" />
        <img src="/phones/x20.png" alt="Mkopa X20" id="img3" />
      </div>
    </div>

    <!-- State Indicators -->
    <div class="state-indicators">
      <div class="state-dot active"></div>
      <div class="state-dot"></div>
      <div class="state-dot"></div>
    </div>
  </div>

  <script>
    let currentIndex: number = 0;
    const totalSlides: number = 3;
    const slideInterval: number = 10000; // 10 seconds

    function updateStateIndicators(index: number): void {
      document
        .querySelectorAll(".state-dot")
        .forEach((dot: Element, i: number) => {
          if (i === index) {
            dot.classList.add("active");
          } else {
            dot.classList.remove("active");
          }
        });
    }

    function showSlide(index: number): void {
      // Remove active classes from all elements
      document.querySelectorAll(".hero-content").forEach((hero: Element) => {
        hero.classList.remove("active", "exit");
      });
      document
        .querySelectorAll(".img-container img")
        .forEach((img: Element) => {
          img.classList.remove("active", "exit");
        });

      // Add active class to current elements with null checks
      const heroElement = document.getElementById(`hero${index + 1}`);
      const imgElement = document.getElementById(`img${index + 1}`);

      if (heroElement) {
        heroElement.classList.add("active");
      }
      if (imgElement) {
        imgElement.classList.add("active");
      }
    }

    function hideSlide(index: number): void {
      const heroElement = document.getElementById(`hero${index + 1}`);
      const imgElement = document.getElementById(`img${index + 1}`);

      if (heroElement) {
        heroElement.classList.add("exit");
      }
      if (imgElement) {
        imgElement.classList.add("exit");
      }
    }

    function nextSlide(): void {
      // Hide current slide
      hideSlide(currentIndex);

      // Change background immediately when transition starts
      const nextIndex: number = (currentIndex + 1) % totalSlides;
      const cardContent = document.querySelector(".card-content");
      if (cardContent) {
        // Remove all slide classes
        cardContent.classList.remove("slide-1", "slide-2", "slide-3");
        // Add next slide class immediately
        cardContent.classList.add(`slide-${nextIndex + 1}`);
      }

      // Update state indicators
      updateStateIndicators(nextIndex);

      // Wait for exit animation to complete, then show next slide
      setTimeout(() => {
        currentIndex = nextIndex;
        showSlide(currentIndex);
      }, 1000); // Wait for 1s exit animation
    }

    // Initialize first slide
    showSlide(currentIndex);
    updateStateIndicators(currentIndex);

    // Start the carousel
    setInterval(nextSlide, slideInterval);
  </script>
</div>
