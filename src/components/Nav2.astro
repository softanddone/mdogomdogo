---
import HeadText from "./HeadText.astro";
import PopularBrands from "./PopularBrands.astro";
---

<nav class="navbar">
  <!-- Top Section -->
  <div class="navbar-top">
    <div class="container">
      <button class="menu-btn" id="menuBtn" aria-label="Toggle menu">
        <span class="hamburger"></span>
        <span class="hamburger"></span>
        <span class="hamburger"></span>
      </button>

      <div class="logo">
        <a href="/">Mdogo Mdogo Deals<span>.</span></a>
      </div>

      <div class="search-container">
        <input
          type="search"
          class="search-input"
          id="searchInput"
          placeholder="Search for products..."
        />
        <button class="search-btn" id="searchBtn" aria-label="Search">
          <svg
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
        </button>
        <div class="search-results" id="searchResults"></div>
      </div>

      <div class="top-actions">
        <button class="icon-btn contact-btn" aria-label="Contact">
          <svg
            width="22"
            height="22"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
            ></path>
          </svg>
        </button>

        <div class="delivery-badge">
          <svg
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <rect x="1" y="3" width="15" height="13"></rect>
            <polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon>
            <circle cx="5.5" cy="18.5" r="2.5"></circle>
            <circle cx="18.5" cy="18.5" r="2.5"></circle>
          </svg>
          <span>Free Delivery</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Bottom Section -->
  <div class="navbar-bottom">
    <div class="container">
      <ul class="nav-menu" id="navMenu">
        <li><a href="/" class="active">Home</a></li>
        <li><a href="/iphone">Iphone</a></li>
        <li><a href="/samsung">Samsung</a></li>
        <li><a href="/infinix">Infinix</a></li>
        <li><a href="/tecno">Tecno</a></li>
        <li><a href="/hmd">Hmd</a></li>
        <li><a href="/smart-tvs">Smart Tvs</a></li>
      </ul>

      <div class="search-container search-mobile">
        <input
          type="search"
          class="search-input"
          id="searchInputMobile"
          placeholder="Search for products..."
        />
        <button class="search-btn" id="searchBtnMobile" aria-label="Search">
          <svg
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
          >
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
        </button>
        <div class="search-results" id="searchResultsMobile"></div>
      </div>

      <button class="cart-btn" id="cartBtn" aria-label="Shopping cart">
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <circle cx="9" cy="21" r="1"></circle>
          <circle cx="20" cy="21" r="1"></circle>
          <path
            d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"
          ></path>
        </svg>
        <span class="cart-count">0</span>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div class="mobile-menu" id="mobileMenu">
    <div class="mobile-menu-header">
      <span class="mobile-menu-title">Menu</span>
      <button class="close-btn" id="closeBtn" aria-label="Close menu">
        <svg
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    <ul class="mobile-nav-links">
      <li><a href="/">Home</a></li>
      <li><a href="/iphone">Iphone</a></li>
      <li><a href="/samsung">Samsung</a></li>
      <li><a href="/tecno">Tecno</a></li>
      <li><a href="/infinix">Infinix</a></li>
      <li><a href="/hmd">HMD</a></li>
      <li><a href="/smart-tvs">Smart Tvs</a></li>
    </ul>
  </div>
</nav>

<style>
  :root {
    --brand: #2563eb;
    --dark: #1f2937;
    --gray: #6b7280;
    --light: #f9fafb;
    --radius: 10px;
    --transition: 0.3s ease;
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: "Inter", sans-serif;
    background: #fff;
    color: var(--dark);
  }

  .navbar {
    position: sticky;
    top: 0;
    width: 100%;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(12px);
    border-bottom: 1px solid #e5e7eb;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    z-index: 1000;
  }

  .container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 24px;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  /* Logo */
  .logo a {
    font-size: 1.5rem;
    font-weight: 800;
    color: var(--dark);
    text-decoration: none;
    letter-spacing: -0.5px;
  }

  .logo span {
    color: var(--brand);
  }

  /* Search */
  .search-container {
    flex: 1;
    max-width: 480px;
    position: relative;
  }

  .search-input {
    width: 100%;
    padding: 12px 48px 12px 16px;
    border: 1.5px solid #d1d5db;
    border-radius: var(--radius);
    font-size: 14px;
    transition: var(--transition);
  }

  .search-input:focus {
    border-color: var(--brand);
    box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.1);
    outline: none;
  }

  .search-btn {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    background: var(--brand);
    border: none;
    padding: 8px;
    border-radius: 8px;
    color: white;
    cursor: pointer;
    transition: var(--transition);
  }

  .search-btn:hover {
    background: #1d4ed8;
  }

  /* Search Results */
  .search-results {
    display: none;
    position: absolute;
    top: calc(100% + 8px);
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: var(--radius);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
    max-height: 500px;
    overflow-y: auto;
    z-index: 1001;
  }

  .search-results.active {
    display: block;
  }

  .search-result-item {
    display: flex;
    align-items: flex-start;
    padding: 12px;
    border-bottom: 1px solid #f3f4f6;
    cursor: pointer;
    transition: var(--transition);
    text-decoration: none;
    color: var(--dark);
    gap: 12px;
  }

  .search-result-item:last-child {
    border-bottom: none;
  }

  .search-result-item:hover {
    background: #f9fafb;
  }

  .search-result-image-wrapper {
    width: 70px;
    height: 70px;
    flex-shrink: 0;
    border-radius: 8px;
    overflow: hidden;
    background: #f3f4f6;
    border: 1px solid #e5e7eb;
  }

  .search-result-image-wrapper img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .search-result-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .search-result-name {
    font-weight: 600;
    font-size: 14px;
    color: var(--dark);
    line-height: 1.3;
    display: flex;
    align-items: center;
    gap: 6px;
    flex-wrap: wrap;
  }

  .search-result-status {
    display: inline-block;
    padding: 2px 6px;
    background: #10b981;
    color: white;
    font-size: 10px;
    font-weight: 600;
    border-radius: 3px;
    white-space: nowrap;
  }

  .search-result-price {
    font-size: 13px;
    color: var(--brand);
    font-weight: 700;
  }

  .no-results {
    padding: 24px;
    text-align: center;
    color: var(--gray);
    font-size: 14px;
  }

  /* Top Actions */
  .top-actions {
    display: flex;
    align-items: center;
    gap: 14px;
  }

  .icon-btn {
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
    color: var(--dark);
    border-radius: 8px;
    transition: var(--transition);
  }

  .icon-btn:hover {
    background: #f3f4f6;
    transform: scale(1.05);
  }

  .delivery-badge {
    display: flex;
    align-items: center;
    gap: 6px;
    background: linear-gradient(135deg, #10b981, #059669);
    color: white;
    padding: 8px 14px;
    border-radius: var(--radius);
    font-size: 13px;
    font-weight: 600;
    box-shadow: 0 3px 8px rgba(16, 185, 129, 0.25);
  }

  /* Bottom Nav */
  .navbar-bottom {
    background: var(--light);
  }

  .nav-menu {
    list-style: none;
    display: flex;
    gap: 28px;
  }

  .nav-menu a {
    text-decoration: none;
    color: var(--gray);
    font-weight: 500;
    padding: 10px 0;
    position: relative;
    transition: var(--transition);
  }

  .nav-menu a::after {
    content: "";
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background: var(--brand);
    transition: var(--transition);
  }

  .nav-menu a:hover,
  .nav-menu a.active {
    color: var(--brand);
  }

  .nav-menu a:hover::after,
  .nav-menu a.active::after {
    width: 100%;
  }

  /* Cart */
  .cart-btn {
    position: relative;
    background: var(--brand);
    border: none;
    padding: 12px 14px;
    border-radius: var(--radius);
    color: white;
    cursor: pointer;
    transition: var(--transition);
  }

  .cart-btn:hover {
    background: #1d4ed8;
    transform: translateY(-2px);
  }

  .cart-count {
    position: absolute;
    top: -6px;
    right: -6px;
    background: #ef4444;
    color: white;
    font-size: 11px;
    font-weight: 700;
    padding: 2px 6px;
    border-radius: 999px;
    min-width: 18px;
    text-align: center;
  }

  /* Mobile Menu */
  .mobile-menu {
    position: fixed;
    top: 0;
    left: -100%;
    width: 280px;
    height: 100vh;
    background: white;
    box-shadow: 2px 0 12px rgba(0, 0, 0, 0.08);
    transition: left var(--transition);
    z-index: 2000;
  }

  .mobile-menu.active {
    left: 0;
  }

  .mobile-menu-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 18px 20px;
    border-bottom: 1px solid #e5e7eb;
  }

  .mobile-nav-links {
    list-style: none;
    padding: 16px 0;
  }

  .mobile-nav-links a {
    display: block;
    padding: 14px 24px;
    color: var(--dark);
    text-decoration: none;
    font-weight: 500;
    transition: var(--transition);
  }

  .mobile-nav-links a:hover {
    background: #f3f4f6;
    color: var(--brand);
    padding-left: 32px;
  }

  .menu-btn {
    display: none;
  }

  .search-mobile {
    display: none;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .navbar-top .container {
      padding: 12px 16px;
    }

    .logo a {
      font-size: 1rem;
    }

    .menu-btn {
      display: flex;
      flex-direction: column;
      gap: 5px;
      background: none;
      border: none;
      cursor: pointer;
    }

    .hamburger {
      width: 22px;
      height: 2px;
      background: var(--dark);
      border-radius: 2px;
    }

    .logo {
      flex: 1;
      text-align: center;
    }

    .top-actions {
      gap: 8px;
    }

    .icon-btn {
      padding: 6px;
    }

    .delivery-badge {
      padding: 6px 10px;
      font-size: 12px;
    }

    .delivery-badge span {
      display: none;
    }

    .navbar-top .search-container {
      display: none;
    }

    .search-mobile {
      display: block;
      flex: 1;
      max-width: 100%;
    }

    .nav-menu {
      display: none;
    }

    .navbar-bottom .container {
      padding: 12px 16px;
      gap: 12px;
    }

    .search-input {
      padding: 10px 44px 10px 14px;
      font-size: 13px;
    }

    .search-result-item {
      padding: 10px;
      gap: 10px;
    }

    .search-result-image-wrapper {
      width: 60px;
      height: 60px;
    }

    .search-result-name {
      font-size: 13px;
    }

    .search-result-price {
      font-size: 12px;
    }
  }
</style>

<script>
  import { products } from "../data/product2";

  interface Product {
    id: number;
    name: string;
    status: string;
    image: string;
    from: string;
    totalPrice: string;
    slug: string;
    source: string;
  }

  // Get DOM elements
  const menuBtn = document.getElementById(
    "menuBtn"
  ) as HTMLButtonElement | null;
  const mobileMenu = document.getElementById(
    "mobileMenu"
  ) as HTMLDivElement | null;
  const closeBtn = document.getElementById(
    "closeBtn"
  ) as HTMLButtonElement | null;

  const searchInput = document.getElementById(
    "searchInput"
  ) as HTMLInputElement | null;
  const searchBtn = document.getElementById(
    "searchBtn"
  ) as HTMLButtonElement | null;
  const searchResults = document.getElementById(
    "searchResults"
  ) as HTMLDivElement | null;

  const searchInputMobile = document.getElementById(
    "searchInputMobile"
  ) as HTMLInputElement | null;
  const searchBtnMobile = document.getElementById(
    "searchBtnMobile"
  ) as HTMLButtonElement | null;
  const searchResultsMobile = document.getElementById(
    "searchResultsMobile"
  ) as HTMLDivElement | null;

  // Mobile menu handlers
  menuBtn?.addEventListener("click", () => {
    mobileMenu?.classList.add("active");
  });

  closeBtn?.addEventListener("click", () => {
    mobileMenu?.classList.remove("active");
  });

  document.addEventListener("click", (e: MouseEvent) => {
    const target = e.target as Node;
    if (
      mobileMenu?.classList.contains("active") &&
      !mobileMenu.contains(target) &&
      menuBtn &&
      !menuBtn.contains(target)
    ) {
      mobileMenu.classList.remove("active");
    }
  });

  // Search function
  function performSearch(
    query: string,
    resultsContainer: HTMLDivElement
  ): void {
    if (!query.trim()) {
      resultsContainer.classList.remove("active");
      return;
    }

    const filtered = (products as Product[]).filter((product: Product) =>
      product.name.toLowerCase().includes(query.toLowerCase())
    );

    if (filtered.length === 0) {
      resultsContainer.innerHTML =
        '<div class="no-results">No products found</div>';
      resultsContainer.classList.add("active");
      return;
    }

    const html: string = filtered
      .map(
        (product: Product) => `
          <a href="/product/${product.slug}" class="search-result-item">
            <div class="search-result-image-wrapper">
              <img src="${product.source}" alt="${product.name}" onerror="this.src='data:image/svg+xml,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2270%22 height=%2270%22%3E%3Crect fill=%22%23f3f4f6%22 width=%2270%22 height=%2270%22/%3E%3C/svg%3E'">
            </div>
            <div class="search-result-info">
              <div class="search-result-name">
                ${product.name}
                <span class="search-result-status">${product.status}</span>
              </div>
              <div class="search-result-price">${product.totalPrice}</div>
            </div>
          </a>
        `
      )
      .join("");

    resultsContainer.innerHTML = html;
    resultsContainer.classList.add("active");
  }

  // Desktop search handlers
  searchInput?.addEventListener("input", (e: Event) => {
    const target = e.target as HTMLInputElement;
    if (searchResults) {
      performSearch(target.value, searchResults);
    }
  });

  searchBtn?.addEventListener("click", () => {
    if (searchInput && searchResults) {
      performSearch(searchInput.value, searchResults);
    }
  });

  searchInput?.addEventListener("keypress", (e: KeyboardEvent) => {
    if (e.key === "Enter" && searchResults) {
      performSearch(searchInput.value, searchResults);
    }
  });

  // Mobile search handlers
  searchInputMobile?.addEventListener("input", (e: Event) => {
    const target = e.target as HTMLInputElement;
    if (searchResultsMobile) {
      performSearch(target.value, searchResultsMobile);
    }
  });

  searchBtnMobile?.addEventListener("click", () => {
    if (searchInputMobile && searchResultsMobile) {
      performSearch(searchInputMobile.value, searchResultsMobile);
    }
  });

  searchInputMobile?.addEventListener("keypress", (e: KeyboardEvent) => {
    if (e.key === "Enter" && searchInputMobile && searchResultsMobile) {
      performSearch(searchInputMobile.value, searchResultsMobile);
    }
  });

  // Close search results when clicking outside
  document.addEventListener("click", (e: MouseEvent) => {
    const target = e.target as HTMLElement;
    if (!target.closest(".search-container")) {
      searchResults?.classList.remove("active");
      searchResultsMobile?.classList.remove("active");
    }
  });
</script>
